<?xml version="1.0"?>
<doc>
	<assembly>
		<name>Cryville.Audio</name>
	</assembly>
	<members>
		<member name="T:Cryville.Audio.AudioClient">
			<summary>
				管理与 <see cref="T:Cryville.Audio.IAudioDevice" /> 连接的音频客户端。
			</summary>
		</member>
		<member name="M:Cryville.Audio.AudioClient.Dispose">
			<inheritdoc />
		</member>
		<member name="M:Cryville.Audio.AudioClient.Dispose(System.Boolean)">
			<summary>
				执行与释放或重置非托管资源关联的应用程序定义的任务。
			</summary>
			<param name="disposing">该方法是否由用户调用。</param>
		</member>
		<member name="P:Cryville.Audio.AudioClient.Device">
			<summary>
				客户端的设备。
			</summary>
		</member>
		<member name="P:Cryville.Audio.AudioClient.Format">
			<summary>
				当前连接使用的波形格式。
			</summary>
		</member>
		<member name="P:Cryville.Audio.AudioClient.BufferSize">
			<summary>
				缓存大小（帧）。
			</summary>
		</member>
		<member name="P:Cryville.Audio.AudioClient.MaximumLatency">
			<summary>
				连接的最大延迟（毫秒）。
			</summary>
			<remarks>
				<para>如果 API 不提供最大延迟，则该值为 0。</para>
			</remarks>
		</member>
		<member name="P:Cryville.Audio.AudioClient.Playing">
			<summary>
				客户端是否正在播放。
			</summary>
		</member>
		<member name="P:Cryville.Audio.AudioClient.Muted">
			<summary>
				客户端是否被静音。
			</summary>
		</member>
		<member name="P:Cryville.Audio.AudioClient.Position">
			<summary>
				设备流的当前位置（秒）。
			</summary>
		</member>
		<member name="P:Cryville.Audio.AudioClient.BufferPosition">
			<summary>
				缓存的当前位置（秒）。
			</summary>
		</member>
		<member name="P:Cryville.Audio.AudioClient.Source">
			<summary>
				音频源。
			</summary>
		</member>
		<member name="M:Cryville.Audio.AudioClient.Start">
			<summary>
				开始传输波形数据。
			</summary>
			<remarks>
				如果播放时 <see cref="P:Cryville.Audio.AudioClient.Source" /> 为 <see langword="null" />，则会输出静音。
			</remarks>
		</member>
		<member name="M:Cryville.Audio.AudioClient.Pause">
			<summary>
				暂停传输波形数据。
			</summary>
			<remarks>
				该方法不重置 <see cref="P:Cryville.Audio.AudioClient.Position" /> 和 <see cref="P:Cryville.Audio.AudioClient.BufferPosition" />。
			</remarks>
		</member>
		<member name="T:Cryville.Audio.AudioShareMode">
			<summary>
				音频连接的共享模式。
			</summary>
		</member>
		<member name="F:Cryville.Audio.AudioShareMode.Shared">
			<summary>
				以比 <see cref="F:Cryville.Audio.AudioShareMode.Exclusive" /> 模式更高的延迟为代价，与其它连接共享设备。输出的数据将被音频服务混音。
			</summary>
		</member>
		<member name="F:Cryville.Audio.AudioShareMode.Exclusive">
			<summary>
				当前连接以低延迟独占设备。
			</summary>
			<remarks>初始化独占模式下的连接需要设备支持，且该设备当前未被占用。</remarks>
		</member>
		<member name="T:Cryville.Audio.AudioStream">
			<summary>
				音频流。
			</summary>
		</member>
		<member name="P:Cryville.Audio.AudioStream.Format">
			<summary>
				波形格式。
			</summary>
		</member>
		<member name="P:Cryville.Audio.AudioStream.BufferSize">
			<summary>
				缓存大小（帧）。
			</summary>
		</member>
		<member name="P:Cryville.Audio.AudioStream.EndOfData">
			<summary>
				音频流是否到达了数据末尾。
			</summary>
		</member>
		<member name="M:Cryville.Audio.AudioStream.SetFormat(Cryville.Audio.WaveFormat,System.Int32)">
			<summary>
				设置音频流的波形格式和缓存大小。
			</summary>
			<param name="format">波形格式。</param>
			<param name="bufferSize">缓存大小（帧）。</param>
			<exception cref="T:System.InvalidOperationException">该方法在当前音频流上已被成功调用过一次。</exception>
			<exception cref="T:System.NotSupportedException">
				音频流不支持 <paramref name="format" />。
			</exception>
		</member>
		<member name="M:Cryville.Audio.AudioStream.OnSetFormat">
			<summary>
				当波形格式和缓存大小被设置时被调用。
			</summary>
		</member>
		<member name="M:Cryville.Audio.AudioStream.IsFormatSupported(Cryville.Audio.WaveFormat)">
			<summary>
				获取音频流是否支持 <paramref name="format" />。
			</summary>
			<param name="format">波形格式。</param>
		</member>
		<member name="M:Cryville.Audio.AudioStream.SeekTime(System.Double,System.IO.SeekOrigin)">
			<summary>
				设置当前音频流的时间。
			</summary>
			<param name="offset">
				相对于 <paramref name="origin" /> 参数的偏移（秒）。
			</param>
			<param name="origin">
				<see cref="T:System.IO.SeekOrigin" /> 类型的一个值，指定用于获取新时间的参考点。
			</param>
			<returns>当前音频流的新时间（秒）。</returns>
		</member>
		<member name="M:Cryville.Audio.AudioStream.SetDuration(System.Double)">
			<summary>
				设置当前音频流的时长。
			</summary>
			<param name="value">时长（秒）。</param>
		</member>
		<member name="P:Cryville.Audio.AudioStream.Duration">
			<summary>
				音频流的时长（秒）。
			</summary>
		</member>
		<member name="P:Cryville.Audio.AudioStream.Time">
			<summary>
				当前音频流的时间（秒）。
			</summary>
		</member>
		<member name="M:Cryville.Audio.AudioStream.SilentBuffer(Cryville.Audio.WaveFormat,System.Byte[],System.Int32,System.Int32)">
			<summary>
				将静音填充到缓存。
			</summary>
			<param name="format">波形格式。</param>
			<param name="buffer">被填充的缓存。</param>
			<param name="offset">
				<paramref name="buffer" /> 中开始填充处的索引（字节）。
			</param>
			<param name="count">需要填充的长度（字节）。</param>
		</member>
		<member name="T:Cryville.Audio.DataFlow">
			<summary>
				音频连接的数据流向。
			</summary>
		</member>
		<member name="F:Cryville.Audio.DataFlow.None">
			<summary>
				无。
			</summary>
		</member>
		<member name="F:Cryville.Audio.DataFlow.Out">
			<summary>
				数据从软件流向硬件。
			</summary>
		</member>
		<member name="F:Cryville.Audio.DataFlow.In">
			<summary>
				数据从硬件流向软件。
			</summary>
		</member>
		<member name="F:Cryville.Audio.DataFlow.All">
			<summary>
				任意数据流向。
			</summary>
		</member>
		<member name="T:Cryville.Audio.EngineBuilder">
			<summary>
				Cryville.Audio 的推荐入口，用于创建一个 <see cref="T:Cryville.Audio.IAudioDeviceManager" />。
			</summary>
		</member>
		<member name="F:Cryville.Audio.EngineBuilder.Engines">
			<summary>
				可用引擎列表。
			</summary>
		</member>
		<member name="M:Cryville.Audio.EngineBuilder.Create">
			<summary>
				创建 <see cref="F:Cryville.Audio.EngineBuilder.Engines" /> 列表中的一个 <see cref="T:Cryville.Audio.IAudioDeviceManager" />。
			</summary>
			<returns>
				第一个能够被成功创建的 <see cref="T:Cryville.Audio.IAudioDeviceManager" />。如果没有支持的引擎则返回 <see langword="null" />。
			</returns>
			<remarks>
				<para>
					调用该方法前，先在 <see cref="F:Cryville.Audio.EngineBuilder.Engines" /> 中添加引擎。
				</para>
			</remarks>
		</member>
		<member name="T:Cryville.Audio.IAudioDevice">
			<summary>
				音频设备。
			</summary>
		</member>
		<member name="P:Cryville.Audio.IAudioDevice.Name">
			<summary>
				设备的通俗名称。
			</summary>
		</member>
		<member name="P:Cryville.Audio.IAudioDevice.DataFlow">
			<summary>
				设备的数据流向。
			</summary>
		</member>
		<member name="P:Cryville.Audio.IAudioDevice.BurstSize">
			<summary>
				设备的脉冲大小（帧）。
			</summary>
		</member>
		<member name="P:Cryville.Audio.IAudioDevice.MinimumBufferSize">
			<summary>
				设备的最小缓存大小（帧）。
			</summary>
		</member>
		<member name="P:Cryville.Audio.IAudioDevice.DefaultBufferSize">
			<summary>
				设备的默认缓存大小（帧）。
			</summary>
		</member>
		<member name="P:Cryville.Audio.IAudioDevice.DefaultFormat">
			<summary>
				设备在共享模式下的默认波形格式。
			</summary>
			<remarks>
				<para>
					对于独占模式的流，调用 <see cref="M:Cryville.Audio.IAudioDevice.IsFormatSupported(Cryville.Audio.WaveFormat,System.Nullable{Cryville.Audio.WaveFormat}@,Cryville.Audio.AudioShareMode)" /> 以确定可用的格式。
				</para>
			</remarks>
		</member>
		<member name="M:Cryville.Audio.IAudioDevice.IsFormatSupported(Cryville.Audio.WaveFormat,System.Nullable{Cryville.Audio.WaveFormat}@,Cryville.Audio.AudioShareMode)">
			<summary>
				获取设备是否支持 <paramref name="format" />。
			</summary>
			<param name="format">指定的波形格式。</param>
			<param name="suggestion">
				设备建议的波形格式。如果设备支持 <paramref name="format" /> 则直接返回该参数。如果设备不支持任何格式则返回 <see langword="null" />。
			</param>
			<param name="shareMode">共享模式。</param>
			<returns>
				设备是否支持 <paramref name="format" />。
			</returns>
		</member>
		<member name="M:Cryville.Audio.IAudioDevice.Connect(Cryville.Audio.WaveFormat,System.Int32,Cryville.Audio.AudioShareMode)">
			<summary>
				连接到设备。
			</summary>
			<param name="format">波形格式。</param>
			<param name="bufferSize">连接的缓存大小（帧）。</param>
			<param name="shareMode">连接的共享模式。</param>
			<returns>
				一个用于与设备交互的 <see cref="T:Cryville.Audio.AudioClient" />。
			</returns>
		</member>
		<member name="T:Cryville.Audio.IAudioDeviceManager">
			<summary>
				管理 <see cref="T:Cryville.Audio.IAudioDevice" /> 的音频设备管理器。
			</summary>
			<remarks>
				如果系统不支持一个 <see cref="T:Cryville.Audio.IAudioDeviceManager" />，尝试创建其实例时将抛出异常。
			</remarks>
		</member>
		<member name="M:Cryville.Audio.IAudioDeviceManager.GetDevices(Cryville.Audio.DataFlow)">
			<summary>
				获取指定 <paramref name="dataFlow" /> 的所有音频设备。
			</summary>
			<param name="dataFlow">数据流向。</param>
		</member>
		<member name="M:Cryville.Audio.IAudioDeviceManager.GetDefaultDevice(Cryville.Audio.DataFlow)">
			<summary>
				获取指定 <paramref name="dataFlow" /> 的默认音频设备。
			</summary>
			<param name="dataFlow">数据流向。</param>
		</member>
		<member name="T:Cryville.Audio.Source.CachedAudioSource">
			<summary>
				一个缓存数据并对其进行复用的 <see cref="T:Cryville.Audio.AudioStream" />。
			</summary>
			<remarks>
				<para>
					该流不支持定位。可以通过调用 <see cref="M:Cryville.Audio.Source.CachedAudioSource.Rewind" /> 重置其时间戳。
				</para>
			</remarks>
		</member>
		<member name="M:Cryville.Audio.Source.CachedAudioSource.#ctor(Cryville.Audio.AudioStream,System.Double)">
			<summary>
				创建一个 <see cref="T:Cryville.Audio.Source.CachedAudioSource" /> 类的实例。
			</summary>
			<param name="source">
				被缓存的 <see cref="T:Cryville.Audio.AudioStream" />。
			</param>
			<param name="duration">缓存长度（秒）。</param>
		</member>
		<member name="M:Cryville.Audio.Source.CachedAudioSource.Clone">
			<summary>
				获取一个时间戳归零的该 <see cref="T:Cryville.Audio.Source.CachedAudioSource" /> 的副本。
			</summary>
			<returns>
				一个时间戳归零的该 <see cref="T:Cryville.Audio.Source.CachedAudioSource" /> 的副本。
			</returns>
			<remarks>
				推荐配合对象池使用。
			</remarks>
		</member>
		<member name="M:Cryville.Audio.Source.CachedAudioSource.Rewind">
			<summary>
				归零时间戳以复用该实例。
			</summary>
			<remarks>
				推荐配合对象池使用。
			</remarks>
		</member>
		<member name="P:Cryville.Audio.Source.CachedAudioSource.EndOfData">
			<inheritdoc />
		</member>
		<member name="P:Cryville.Audio.Source.CachedAudioSource.Disposed">
			<summary>
				该音频流是否已被释放。
			</summary>
		</member>
		<member name="M:Cryville.Audio.Source.CachedAudioSource.Dispose(System.Boolean)">
			<inheritdoc />
		</member>
		<member name="M:Cryville.Audio.Source.CachedAudioSource.IsFormatSupported(Cryville.Audio.WaveFormat)">
			<inheritdoc />
		</member>
		<member name="M:Cryville.Audio.Source.CachedAudioSource.OnSetFormat">
			<inheritdoc />
		</member>
		<member name="M:Cryville.Audio.Source.CachedAudioSource.Read(System.Byte[],System.Int32,System.Int32)">
			<inheritdoc />
		</member>
		<member name="M:Cryville.Audio.Source.CachedAudioSource.Seek(System.Int64,System.IO.SeekOrigin)">
			<inheritdoc />
		</member>
		<member name="P:Cryville.Audio.Source.CachedAudioSource.CanRead">
			<inheritdoc />
		</member>
		<member name="P:Cryville.Audio.Source.CachedAudioSource.CanSeek">
			<inheritdoc />
		</member>
		<member name="P:Cryville.Audio.Source.CachedAudioSource.CanWrite">
			<inheritdoc />
		</member>
		<member name="P:Cryville.Audio.Source.CachedAudioSource.Length">
			<inheritdoc />
		</member>
		<member name="P:Cryville.Audio.Source.CachedAudioSource.Position">
			<inheritdoc />
		</member>
		<member name="M:Cryville.Audio.Source.CachedAudioSource.Flush">
			<inheritdoc />
		</member>
		<member name="M:Cryville.Audio.Source.CachedAudioSource.SetLength(System.Int64)">
			<inheritdoc />
		</member>
		<member name="M:Cryville.Audio.Source.CachedAudioSource.Write(System.Byte[],System.Int32,System.Int32)">
			<inheritdoc />
		</member>
		<member name="T:Cryville.Audio.Source.FunctionAudioSource">
			<summary>
				一个以给定函数生成波形数据的 <see cref="T:Cryville.Audio.AudioStream" />。
			</summary>
		</member>
		<member name="P:Cryville.Audio.Source.FunctionAudioSource.Channels">
			<summary>
				输出波形格式的声道数。
			</summary>
		</member>
		<member name="P:Cryville.Audio.Source.FunctionAudioSource.EndOfData">
			<inheritdoc />
		</member>
		<member name="P:Cryville.Audio.Source.FunctionAudioSource.Disposed">
			<summary>
				该音频流是否已被释放。
			</summary>
		</member>
		<member name="M:Cryville.Audio.Source.FunctionAudioSource.Dispose(System.Boolean)">
			<inheritdoc />
		</member>
		<member name="M:Cryville.Audio.Source.FunctionAudioSource.IsFormatSupported(Cryville.Audio.WaveFormat)">
			<inheritdoc />
		</member>
		<member name="M:Cryville.Audio.Source.FunctionAudioSource.OnSetFormat">
			<inheritdoc />
		</member>
		<member name="M:Cryville.Audio.Source.FunctionAudioSource.Read(System.Byte[],System.Int32,System.Int32)">
			<inheritdoc />
		</member>
		<member name="M:Cryville.Audio.Source.FunctionAudioSource.Func(System.Double,System.Int32)">
			<summary>
				用于生成波形的函数。
			</summary>
			<param name="time">时间（秒）。</param>
			<param name="channel">声道索引。</param>
		</member>
		<member name="M:Cryville.Audio.Source.FunctionAudioSource.Seek(System.Int64,System.IO.SeekOrigin)">
			<inheritdoc />
		</member>
		<member name="P:Cryville.Audio.Source.FunctionAudioSource.CanRead">
			<inheritdoc />
		</member>
		<member name="P:Cryville.Audio.Source.FunctionAudioSource.CanSeek">
			<inheritdoc />
		</member>
		<member name="P:Cryville.Audio.Source.FunctionAudioSource.CanWrite">
			<inheritdoc />
		</member>
		<member name="P:Cryville.Audio.Source.FunctionAudioSource.Length">
			<inheritdoc />
		</member>
		<member name="P:Cryville.Audio.Source.FunctionAudioSource.Position">
			<inheritdoc />
		</member>
		<member name="M:Cryville.Audio.Source.FunctionAudioSource.Flush">
			<inheritdoc />
		</member>
		<member name="M:Cryville.Audio.Source.FunctionAudioSource.SetLength(System.Int64)">
			<inheritdoc />
		</member>
		<member name="M:Cryville.Audio.Source.FunctionAudioSource.Write(System.Byte[],System.Int32,System.Int32)">
			<inheritdoc />
		</member>
		<member name="T:Cryville.Audio.Source.SimpleSequencerSource">
			<summary>
				一个对序列中的音频源进行混音的简单 <see cref="T:Cryville.Audio.AudioStream" />。
			</summary>
			<remarks>
				<para>使用该类可参照以下步骤：</para>
				<list type="number">
					<item>
						创建一个 <see cref="T:Cryville.Audio.Source.SimpleSequencerSource" /> 类的实例。
					</item>
					<item>
						通过设置 <see cref="P:Cryville.Audio.AudioClient.Source" /> 将 <see cref="T:Cryville.Audio.Source.SimpleSequencerSource" /> 绑定到一个 <see cref="T:Cryville.Audio.AudioClient" />。
					</item>
					<item>
						调用 <see cref="M:Cryville.Audio.Source.SimpleSequencerSource.NewSession" /> 创建一个新的 <see cref="T:Cryville.Audio.Source.SimpleSequencerSession" />。
					</item>
					<item>
						调用 <see cref="M:Cryville.Audio.AudioClient.Start" /> 并将 <see cref="P:Cryville.Audio.Source.SimpleSequencerSource.Playing" /> 设为 <see langword="true" /> 开始播放。
					</item>
				</list>
				<para>
					播放开始前后都可以将 <see cref="T:Cryville.Audio.AudioStream" /> 序列至 <see cref="T:Cryville.Audio.Source.SimpleSequencerSession" />。参见 <see cref="M:Cryville.Audio.Source.SimpleSequencerSession.Sequence(System.Double,Cryville.Audio.AudioStream)" />。
				</para>
				<para>
					如果 <see cref="P:Cryville.Audio.Source.SimpleSequencerSource.Playing" /> 被设为 <see langword="false" />，输出将变为静音。
				</para>
			</remarks>
		</member>
		<member name="M:Cryville.Audio.Source.SimpleSequencerSource.#ctor(System.Int32)">
			<summary>
				创建一个 <see cref="T:Cryville.Audio.Source.SimpleSequencerSource" /> 类的实例。
			</summary>
			<param name="maxPolyphony">
				序列器的最大复音数。必须大于 0。参见 <see cref="P:Cryville.Audio.Source.SimpleSequencerSource.MaxPolyphony"/>。
			</param>
		</member>
		<member name="P:Cryville.Audio.Source.SimpleSequencerSource.Disposed">
			<summary>
				该音频流是否已被释放。
			</summary>
		</member>
		<member name="M:Cryville.Audio.Source.SimpleSequencerSource.Dispose(System.Boolean)">
			<inheritdoc />
		</member>
		<member name="P:Cryville.Audio.Source.SimpleSequencerSource.EndOfData">
			<inheritdoc />
		</member>
		<member name="M:Cryville.Audio.Source.SimpleSequencerSource.OnSetFormat">
			<inheritdoc />
		</member>
		<member name="M:Cryville.Audio.Source.SimpleSequencerSource.IsFormatSupported(Cryville.Audio.WaveFormat)">
			<inheritdoc />
		</member>
		<member name="P:Cryville.Audio.Source.SimpleSequencerSource.Playing">
			<summary>
				当前会话是否正在播放。
			</summary>
			<remarks>
				播放状态切换时有一个小延迟，大约是 <see cref="P:Cryville.Audio.AudioClient.BufferPosition" /> 减去 <see cref="P:Cryville.Audio.AudioClient.Position" />。
			</remarks>
		</member>
		<member name="M:Cryville.Audio.Source.SimpleSequencerSource.Read(System.Byte[],System.Int32,System.Int32)">
			<inheritdoc />
		</member>
		<member name="M:Cryville.Audio.Source.SimpleSequencerSource.Seek(System.Int64,System.IO.SeekOrigin)">
			<inheritdoc />
			<param name="offset">相对于当前位置的偏移。</param>
			<param name="origin">
				必须为 <see cref="F:System.IO.SeekOrigin.Current" />。
			</param>
			<remarks>
				<para>
					该流只能从当前位置开始向后定位，因此，<paramref name="offset" /> 必须为非负数，且 <paramref name="origin" /> 必须为 <see cref="F:System.IO.SeekOrigin.Current" />。
				</para>
			</remarks>
		</member>
		<member name="P:Cryville.Audio.Source.SimpleSequencerSource.CanRead">
			<inheritdoc />
		</member>
		<member name="P:Cryville.Audio.Source.SimpleSequencerSource.CanSeek">
			<inheritdoc />
			<remarks>
				<para>
					该流只能从当前位置开始向后定位。参见 <see cref="M:Cryville.Audio.Source.SimpleSequencerSource.Seek(System.Int64,System.IO.SeekOrigin)" />。
				</para>
			</remarks>
		</member>
		<member name="P:Cryville.Audio.Source.SimpleSequencerSource.CanWrite">
			<inheritdoc />
		</member>
		<member name="P:Cryville.Audio.Source.SimpleSequencerSource.Length">
			<inheritdoc />
		</member>
		<member name="P:Cryville.Audio.Source.SimpleSequencerSource.Position">
			<inheritdoc />
			<remarks>
				<para>
					虽然该流支持定位，但是不支持设置该属性，否则会抛出 <see cref="T:System.NotSupportedException" />。该流只能从当前位置开始向后定位。参见 <see cref="M:Cryville.Audio.Source.SimpleSequencerSource.Seek(System.Int64,System.IO.SeekOrigin)" />。
				</para>
			</remarks>
		</member>
		<member name="M:Cryville.Audio.Source.SimpleSequencerSource.Flush">
			<inheritdoc />
		</member>
		<member name="M:Cryville.Audio.Source.SimpleSequencerSource.SetLength(System.Int64)">
			<inheritdoc />
		</member>
		<member name="M:Cryville.Audio.Source.SimpleSequencerSource.Write(System.Byte[],System.Int32,System.Int32)">
			<inheritdoc />
		</member>
		<member name="P:Cryville.Audio.Source.SimpleSequencerSource.Polyphony">
			<summary>
				复音数，当前正在播放的音频源数量。
			</summary>
		</member>
		<member name="P:Cryville.Audio.Source.SimpleSequencerSource.MaxPolyphony">
			<summary>
				最大复音数，可以同时播放音频源的最大数量。
			</summary>
		</member>
		<member name="P:Cryville.Audio.Source.SimpleSequencerSource.Session">
			<summary>
				当前正在播放的 <see cref="T:Cryville.Audio.Source.SimpleSequencerSession" />。
			</summary>
		</member>
		<member name="M:Cryville.Audio.Source.SimpleSequencerSource.NewSession">
			<summary>
				停止当前会话，创建一个新的 <see cref="T:Cryville.Audio.Source.SimpleSequencerSession" /> 将其替换。
			</summary>
			<remarks>
				创建前必须先绑定 <see cref="T:Cryville.Audio.AudioClient" />。
			</remarks>
		</member>
		<member name="T:Cryville.Audio.Source.SimpleSequencerSession">
			<summary>
				<see cref="T:Cryville.Audio.Source.SimpleSequencerSource" /> 的会话。
			</summary>
		</member>
		<member name="M:Cryville.Audio.Source.SimpleSequencerSession.Sequence(System.Double,Cryville.Audio.AudioStream)">
			<summary>
				将 <paramref name="source" /> 序列至指定的 <paramref name="time" />。
			</summary>
			<param name="time">时间（秒）。</param>
			<param name="source">音频源。</param>
			<remarks>
				<para>
					如果 <paramref name="time" /> 小于当前时间，<paramref name="source" /> 将被立刻播放。
				</para>
				<para>
					如果正在播放的音频源数量超过了 <see cref="P:Cryville.Audio.Source.SimpleSequencerSource.MaxPolyphony" />，<paramref name="source" /> 将被丢弃。
				</para>
				<para>即使序列器被释放了，仍然可以序列音频源，虽然不会有任何效果。</para>
			</remarks>
		</member>
		<member name="T:Cryville.Audio.Source.SingleToneAudioSource">
			<summary>
				一个生成单调声调的 <see cref="T:Cryville.Audio.AudioStream" />。
			</summary>
		</member>
		<member name="P:Cryville.Audio.Source.SingleToneAudioSource.Type">
			<summary>
				声调类型。
			</summary>
		</member>
		<member name="P:Cryville.Audio.Source.SingleToneAudioSource.Frequency">
			<summary>
				波形频率。
			</summary>
		</member>
		<member name="P:Cryville.Audio.Source.SingleToneAudioSource.Amplitude">
			<summary>
				波形振幅。
			</summary>
		</member>
		<member name="M:Cryville.Audio.Source.SingleToneAudioSource.Func(System.Double,System.Int32)">
			<inheritdoc />
		</member>
		<member name="T:Cryville.Audio.Source.ToneType">
			<summary>
				声调类型。
			</summary>
		</member>
		<member name="F:Cryville.Audio.Source.ToneType.Sine">
			<summary>
				正弦波。
			</summary>
		</member>
		<member name="F:Cryville.Audio.Source.ToneType.Triangle">
			<summary>
				锯齿波。
			</summary>
		</member>
		<member name="F:Cryville.Audio.Source.ToneType.Square">
			<summary>
				方波。
			</summary>
		</member>
		<member name="T:Cryville.Audio.WaveFormat">
			<summary>
				波形格式。
			</summary>
		</member>
		<member name="P:Cryville.Audio.WaveFormat.Channels">
			<summary>
				声道数。
			</summary>
		</member>
		<member name="P:Cryville.Audio.WaveFormat.SampleRate">
			<summary>
				采样率（每秒每频道样本数，即每秒帧数）。
			</summary>
		</member>
		<member name="P:Cryville.Audio.WaveFormat.SampleFormat">
			<summary>
				样本格式。
			</summary>
		</member>
		<member name="P:Cryville.Audio.WaveFormat.BitsPerSample">
			<summary>
				每样本位数。
			</summary>
		</member>
		<member name="P:Cryville.Audio.WaveFormat.FrameSize">
			<summary>
				每帧字节数。
			</summary>
		</member>
		<member name="P:Cryville.Audio.WaveFormat.BytesPerSecond">
			<summary>
				每秒字节数。
			</summary>
		</member>
		<member name="F:Cryville.Audio.WaveFormat.Default">
			<summary>
				默认波形格式。
			</summary>
		</member>
		<member name="M:Cryville.Audio.WaveFormat.Align(System.Double,System.Boolean)">
			<summary>
				获取对齐的缓存大小。
			</summary>
			<param name="size">需要的缓存大小（字节）。</param>
			<param name="floored">结果被向下还是向上取整。</param>
			<returns>对齐的缓存大小（字节）。</returns>
		</member>
		<member name="M:Cryville.Audio.WaveFormat.ToString">
			<inheritdoc />
		</member>
		<member name="M:Cryville.Audio.WaveFormat.Equals(Cryville.Audio.WaveFormat)">
			<inheritdoc />
		</member>
		<member name="M:Cryville.Audio.WaveFormat.Equals(System.Object)">
			<inheritdoc />
		</member>
		<member name="M:Cryville.Audio.WaveFormat.GetHashCode">
			<inheritdoc />
		</member>
		<member name="M:Cryville.Audio.WaveFormat.op_Equality(Cryville.Audio.WaveFormat,Cryville.Audio.WaveFormat)">
			<inheritdoc />
		</member>
		<member name="M:Cryville.Audio.WaveFormat.op_Inequality(Cryville.Audio.WaveFormat,Cryville.Audio.WaveFormat)">
			<inheritdoc />
		</member>
		<member name="T:Cryville.Audio.SampleFormat">
			<summary>
				样本格式。
			</summary>
		</member>
		<member name="F:Cryville.Audio.SampleFormat.Invalid">
			<summary>
				无效样本格式。
			</summary>
		</member>
		<member name="F:Cryville.Audio.SampleFormat.U8">
			<summary>
				无符号 8 位整型样本格式。
			</summary>
		</member>
		<member name="F:Cryville.Audio.SampleFormat.S16">
			<summary>
				有符号 16 位整型样本格式。
			</summary>
		</member>
		<member name="F:Cryville.Audio.SampleFormat.S24">
			<summary>
				有符号 24 位整型样本格式。
			</summary>
		</member>
		<member name="F:Cryville.Audio.SampleFormat.S32">
			<summary>
				有符号 32 位整型样本格式。
			</summary>
		</member>
		<member name="F:Cryville.Audio.SampleFormat.F32">
			<summary>
				IEEE 754 单精度浮点型样本格式。
			</summary>
		</member>
		<member name="F:Cryville.Audio.SampleFormat.F64">
			<summary>
				IEEE 754 双精度浮点型样本格式。
			</summary>
		</member>
	</members>
</doc>
