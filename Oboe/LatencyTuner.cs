//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Oboe {

public class LatencyTuner : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal LatencyTuner(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(LatencyTuner obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~LatencyTuner() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          oboePINVOKE.delete_LatencyTuner(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public LatencyTuner(AudioStream stream) : this(oboePINVOKE.new_LatencyTuner__SWIG_0(AudioStream.getCPtr(stream)), true) {
    if (oboePINVOKE.SWIGPendingException.Pending) throw oboePINVOKE.SWIGPendingException.Retrieve();
  }

  public LatencyTuner(AudioStream stream, int maximumBufferSize) : this(oboePINVOKE.new_LatencyTuner__SWIG_1(AudioStream.getCPtr(stream), maximumBufferSize), true) {
    if (oboePINVOKE.SWIGPendingException.Pending) throw oboePINVOKE.SWIGPendingException.Retrieve();
  }

  public Result tune() {
    Result ret = (Result)oboePINVOKE.LatencyTuner_tune(swigCPtr);
    return ret;
  }

  public void requestReset() {
    oboePINVOKE.LatencyTuner_requestReset(swigCPtr);
  }

  public bool isAtMaximumBufferSize() {
    bool ret = oboePINVOKE.LatencyTuner_isAtMaximumBufferSize(swigCPtr);
    return ret;
  }

  public void setMinimumBufferSize(int bufferSize) {
    oboePINVOKE.LatencyTuner_setMinimumBufferSize(swigCPtr, bufferSize);
  }

  public int getMinimumBufferSize() {
    int ret = oboePINVOKE.LatencyTuner_getMinimumBufferSize(swigCPtr);
    return ret;
  }

  public void setBufferSizeIncrement(int sizeIncrement) {
    oboePINVOKE.LatencyTuner_setBufferSizeIncrement(swigCPtr, sizeIncrement);
  }

  public int getBufferSizeIncrement() {
    int ret = oboePINVOKE.LatencyTuner_getBufferSizeIncrement(swigCPtr);
    return ret;
  }

}

}
