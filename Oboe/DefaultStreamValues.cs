//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Oboe {

public class DefaultStreamValues : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal DefaultStreamValues(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(DefaultStreamValues obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~DefaultStreamValues() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          oboePINVOKE.delete_DefaultStreamValues(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public static int SampleRate {
    set {
      oboePINVOKE.DefaultStreamValues_SampleRate_set(value);
    } 
    get {
      int ret = oboePINVOKE.DefaultStreamValues_SampleRate_get();
      return ret;
    } 
  }

  public static int FramesPerBurst {
    set {
      oboePINVOKE.DefaultStreamValues_FramesPerBurst_set(value);
    } 
    get {
      int ret = oboePINVOKE.DefaultStreamValues_FramesPerBurst_get();
      return ret;
    } 
  }

  public static int ChannelCount {
    set {
      oboePINVOKE.DefaultStreamValues_ChannelCount_set(value);
    } 
    get {
      int ret = oboePINVOKE.DefaultStreamValues_ChannelCount_get();
      return ret;
    } 
  }

  public DefaultStreamValues() : this(oboePINVOKE.new_DefaultStreamValues(), true) {
  }

}

}
