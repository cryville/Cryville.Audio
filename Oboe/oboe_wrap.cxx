/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */


#ifndef SWIGCSHARP
#define SWIGCSHARP
#endif



#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stdlib.h>
#include <string.h>
#include <stdio.h>


/* Support for throwing C# exceptions from C/C++. There are two types: 
 * Exceptions that take a message and ArgumentExceptions that take a message and a parameter name. */
typedef enum {
  SWIG_CSharpApplicationException,
  SWIG_CSharpArithmeticException,
  SWIG_CSharpDivideByZeroException,
  SWIG_CSharpIndexOutOfRangeException,
  SWIG_CSharpInvalidCastException,
  SWIG_CSharpInvalidOperationException,
  SWIG_CSharpIOException,
  SWIG_CSharpNullReferenceException,
  SWIG_CSharpOutOfMemoryException,
  SWIG_CSharpOverflowException,
  SWIG_CSharpSystemException
} SWIG_CSharpExceptionCodes;

typedef enum {
  SWIG_CSharpArgumentException,
  SWIG_CSharpArgumentNullException,
  SWIG_CSharpArgumentOutOfRangeException
} SWIG_CSharpExceptionArgumentCodes;

typedef void (SWIGSTDCALL* SWIG_CSharpExceptionCallback_t)(const char *);
typedef void (SWIGSTDCALL* SWIG_CSharpExceptionArgumentCallback_t)(const char *, const char *);

typedef struct {
  SWIG_CSharpExceptionCodes code;
  SWIG_CSharpExceptionCallback_t callback;
} SWIG_CSharpException_t;

typedef struct {
  SWIG_CSharpExceptionArgumentCodes code;
  SWIG_CSharpExceptionArgumentCallback_t callback;
} SWIG_CSharpExceptionArgument_t;

static SWIG_CSharpException_t SWIG_csharp_exceptions[] = {
  { SWIG_CSharpApplicationException, NULL },
  { SWIG_CSharpArithmeticException, NULL },
  { SWIG_CSharpDivideByZeroException, NULL },
  { SWIG_CSharpIndexOutOfRangeException, NULL },
  { SWIG_CSharpInvalidCastException, NULL },
  { SWIG_CSharpInvalidOperationException, NULL },
  { SWIG_CSharpIOException, NULL },
  { SWIG_CSharpNullReferenceException, NULL },
  { SWIG_CSharpOutOfMemoryException, NULL },
  { SWIG_CSharpOverflowException, NULL },
  { SWIG_CSharpSystemException, NULL }
};

static SWIG_CSharpExceptionArgument_t SWIG_csharp_exceptions_argument[] = {
  { SWIG_CSharpArgumentException, NULL },
  { SWIG_CSharpArgumentNullException, NULL },
  { SWIG_CSharpArgumentOutOfRangeException, NULL }
};

static void SWIGUNUSED SWIG_CSharpSetPendingException(SWIG_CSharpExceptionCodes code, const char *msg) {
  SWIG_CSharpExceptionCallback_t callback = SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions)/sizeof(SWIG_CSharpException_t)) {
    callback = SWIG_csharp_exceptions[code].callback;
  }
  callback(msg);
}

static void SWIGUNUSED SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpExceptionArgumentCodes code, const char *msg, const char *param_name) {
  SWIG_CSharpExceptionArgumentCallback_t callback = SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions_argument)/sizeof(SWIG_CSharpExceptionArgument_t)) {
    callback = SWIG_csharp_exceptions_argument[code].callback;
  }
  callback(msg, param_name);
}


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionCallbacks_oboe(
                                                SWIG_CSharpExceptionCallback_t applicationCallback,
                                                SWIG_CSharpExceptionCallback_t arithmeticCallback,
                                                SWIG_CSharpExceptionCallback_t divideByZeroCallback, 
                                                SWIG_CSharpExceptionCallback_t indexOutOfRangeCallback, 
                                                SWIG_CSharpExceptionCallback_t invalidCastCallback,
                                                SWIG_CSharpExceptionCallback_t invalidOperationCallback,
                                                SWIG_CSharpExceptionCallback_t ioCallback,
                                                SWIG_CSharpExceptionCallback_t nullReferenceCallback,
                                                SWIG_CSharpExceptionCallback_t outOfMemoryCallback, 
                                                SWIG_CSharpExceptionCallback_t overflowCallback, 
                                                SWIG_CSharpExceptionCallback_t systemCallback) {
  SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback = applicationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpArithmeticException].callback = arithmeticCallback;
  SWIG_csharp_exceptions[SWIG_CSharpDivideByZeroException].callback = divideByZeroCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIndexOutOfRangeException].callback = indexOutOfRangeCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidCastException].callback = invalidCastCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidOperationException].callback = invalidOperationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIOException].callback = ioCallback;
  SWIG_csharp_exceptions[SWIG_CSharpNullReferenceException].callback = nullReferenceCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOutOfMemoryException].callback = outOfMemoryCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOverflowException].callback = overflowCallback;
  SWIG_csharp_exceptions[SWIG_CSharpSystemException].callback = systemCallback;
}

#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionArgumentCallbacks_oboe(
                                                SWIG_CSharpExceptionArgumentCallback_t argumentCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentNullCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentOutOfRangeCallback) {
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback = argumentCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentNullException].callback = argumentNullCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentOutOfRangeException].callback = argumentOutOfRangeCallback;
}


/* Callback for returning strings to C# without leaking memory */
typedef char * (SWIGSTDCALL* SWIG_CSharpStringHelperCallback)(const char *);
static SWIG_CSharpStringHelperCallback SWIG_csharp_string_callback = NULL;


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterStringCallback_oboe(SWIG_CSharpStringHelperCallback callback) {
  SWIG_csharp_string_callback = callback;
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, msg, ""); return nullreturn; } else


#include <string>


#include "Definitions.h"
#include "AudioStreamCallback.h"
#include "ResultWithValue.h"
#include "LatencyTuner.h"
#include "AudioStreamBase.h"
#include "AudioStream.h"
#include "AudioStreamBuilder.h"
#include "Utilities.h"
#include "Version.h"
#include "StabilizedCallback.h"
#include "Oboe.h"


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_INT8_MIN_get() {
  int jresult ;
  int result;
  
  result = (int)((-128));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_INT8_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)((127));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_INT_LEAST8_MIN_get() {
  int jresult ;
  int result;
  
  result = (int)((-128));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_INT_LEAST8_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)((127));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_INT_FAST8_MIN_get() {
  int jresult ;
  int result;
  
  result = (int)((-128));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_INT_FAST8_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)((127));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_UINT8_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)((255));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_UINT_LEAST8_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)((255));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_UINT_FAST8_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)((255));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_INT16_MIN_get() {
  int jresult ;
  int result;
  
  result = (int)((-32768));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_INT16_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)((32767));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_INT_LEAST16_MIN_get() {
  int jresult ;
  int result;
  
  result = (int)((-32768));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_INT_LEAST16_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)((32767));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_UINT16_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)((65535));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_UINT_LEAST16_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)((65535));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_INT32_MIN_get() {
  int jresult ;
  int result;
  
  result = (int)((-2147483647-1));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_INT32_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)((2147483647));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_INT_LEAST32_MIN_get() {
  int jresult ;
  int result;
  
  result = (int)((-2147483647-1));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_INT_LEAST32_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)((2147483647));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_INT_FAST32_MIN_get() {
  int jresult ;
  int result;
  
  result = (int)((-2147483647-1));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_INT_FAST32_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)((2147483647));
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Oboe_UINT32_MAX_get() {
  unsigned int jresult ;
  unsigned int result;
  
  result = (unsigned int)((4294967295U));
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Oboe_UINT_LEAST32_MAX_get() {
  unsigned int jresult ;
  unsigned int result;
  
  result = (unsigned int)((4294967295U));
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Oboe_UINT_FAST32_MAX_get() {
  unsigned int jresult ;
  unsigned int result;
  
  result = (unsigned int)((4294967295U));
  jresult = result; 
  return jresult;
}


SWIGEXPORT long long SWIGSTDCALL CSharp_Oboe_INT64_MIN_get() {
  long long jresult ;
  long long result;
  
  result = (long long)((-9223372036854775807LL-1));
  jresult = result; 
  return jresult;
}


SWIGEXPORT long long SWIGSTDCALL CSharp_Oboe_INT64_MAX_get() {
  long long jresult ;
  long long result;
  
  result = (long long)((9223372036854775807LL));
  jresult = result; 
  return jresult;
}


SWIGEXPORT long long SWIGSTDCALL CSharp_Oboe_INT_LEAST64_MIN_get() {
  long long jresult ;
  long long result;
  
  result = (long long)((-9223372036854775807LL-1));
  jresult = result; 
  return jresult;
}


SWIGEXPORT long long SWIGSTDCALL CSharp_Oboe_INT_LEAST64_MAX_get() {
  long long jresult ;
  long long result;
  
  result = (long long)((9223372036854775807LL));
  jresult = result; 
  return jresult;
}


SWIGEXPORT long long SWIGSTDCALL CSharp_Oboe_INT_FAST64_MIN_get() {
  long long jresult ;
  long long result;
  
  result = (long long)((-9223372036854775807LL-1));
  jresult = result; 
  return jresult;
}


SWIGEXPORT long long SWIGSTDCALL CSharp_Oboe_INT_FAST64_MAX_get() {
  long long jresult ;
  long long result;
  
  result = (long long)((9223372036854775807LL));
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_Oboe_UINT64_MAX_get() {
  unsigned long long jresult ;
  unsigned long long result;
  
  result = (unsigned long long)((18446744073709551615ULL));
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_Oboe_UINT_LEAST64_MAX_get() {
  unsigned long long jresult ;
  unsigned long long result;
  
  result = (unsigned long long)((18446744073709551615ULL));
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_Oboe_UINT_FAST64_MAX_get() {
  unsigned long long jresult ;
  unsigned long long result;
  
  result = (unsigned long long)((18446744073709551615ULL));
  jresult = result; 
  return jresult;
}


SWIGEXPORT long long SWIGSTDCALL CSharp_Oboe_INTMAX_MIN_get() {
  long long jresult ;
  long long result;
  
  result = (long long)((-9223372036854775807LL-1));
  jresult = result; 
  return jresult;
}


SWIGEXPORT long long SWIGSTDCALL CSharp_Oboe_INTMAX_MAX_get() {
  long long jresult ;
  long long result;
  
  result = (long long)((9223372036854775807LL));
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_Oboe_UINTMAX_MAX_get() {
  unsigned long long jresult ;
  unsigned long long result;
  
  result = (unsigned long long)((18446744073709551615ULL));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_SIG_ATOMIC_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)((2147483647));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_SIG_ATOMIC_MIN_get() {
  int jresult ;
  int result;
  
  result = (int)((-2147483647-1));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_WINT_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)((2147483647));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_WINT_MIN_get() {
  int jresult ;
  int result;
  
  result = (int)((-2147483647-1));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_INTPTR_MIN_get() {
  int jresult ;
  int result;
  
  result = (int)((-2147483647-1));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_INTPTR_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)((2147483647));
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Oboe_UINTPTR_MAX_get() {
  unsigned int jresult ;
  unsigned int result;
  
  result = (unsigned int)((4294967295U));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_PTRDIFF_MIN_get() {
  int jresult ;
  int result;
  
  result = (int)((-2147483647-1));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_PTRDIFF_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)((2147483647));
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Oboe_SIZE_MAX_get() {
  unsigned int jresult ;
  unsigned int result;
  
  result = (unsigned int)((4294967295U));
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_new_AudioStreamPtr() {
  void * jresult ;
  std::shared_ptr< oboe::AudioStream > *result = 0 ;
  
  result = (std::shared_ptr< oboe::AudioStream > *)new std::shared_ptr< oboe::AudioStream >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_delete_AudioStreamPtr(void * jarg1) {
  std::shared_ptr< oboe::AudioStream > *arg1 = (std::shared_ptr< oboe::AudioStream > *) 0 ;
  
  arg1 = (std::shared_ptr< oboe::AudioStream > *)jarg1; 
  delete arg1;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_kUnspecified_get() {
  int jresult ;
  int32_t result;
  
  result = (int32_t)oboe::kUnspecified;
  jresult = result; 
  return jresult;
}


SWIGEXPORT long long SWIGSTDCALL CSharp_Oboe_kNanosPerMicrosecond_get() {
  long long jresult ;
  int64_t result;
  
  result = (int64_t)oboe::kNanosPerMicrosecond;
  jresult = result; 
  return jresult;
}


SWIGEXPORT long long SWIGSTDCALL CSharp_Oboe_kNanosPerMillisecond_get() {
  long long jresult ;
  int64_t result;
  
  result = (int64_t)oboe::kNanosPerMillisecond;
  jresult = result; 
  return jresult;
}


SWIGEXPORT long long SWIGSTDCALL CSharp_Oboe_kMillisPerSecond_get() {
  long long jresult ;
  int64_t result;
  
  result = (int64_t)oboe::kMillisPerSecond;
  jresult = result; 
  return jresult;
}


SWIGEXPORT long long SWIGSTDCALL CSharp_Oboe_kNanosPerSecond_get() {
  long long jresult ;
  int64_t result;
  
  result = (int64_t)oboe::kNanosPerSecond;
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_DefaultStreamValues_SampleRate_set(int jarg1) {
  int32_t arg1 ;
  
  arg1 = (int32_t)jarg1; 
  oboe::DefaultStreamValues::SampleRate = arg1;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_DefaultStreamValues_SampleRate_get() {
  int jresult ;
  int32_t result;
  
  result = (int32_t)oboe::DefaultStreamValues::SampleRate;
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_DefaultStreamValues_FramesPerBurst_set(int jarg1) {
  int32_t arg1 ;
  
  arg1 = (int32_t)jarg1; 
  oboe::DefaultStreamValues::FramesPerBurst = arg1;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_DefaultStreamValues_FramesPerBurst_get() {
  int jresult ;
  int32_t result;
  
  result = (int32_t)oboe::DefaultStreamValues::FramesPerBurst;
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_DefaultStreamValues_ChannelCount_set(int jarg1) {
  int32_t arg1 ;
  
  arg1 = (int32_t)jarg1; 
  oboe::DefaultStreamValues::ChannelCount = arg1;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_DefaultStreamValues_ChannelCount_get() {
  int jresult ;
  int32_t result;
  
  result = (int32_t)oboe::DefaultStreamValues::ChannelCount;
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_new_DefaultStreamValues() {
  void * jresult ;
  oboe::DefaultStreamValues *result = 0 ;
  
  result = (oboe::DefaultStreamValues *)new oboe::DefaultStreamValues();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_delete_DefaultStreamValues(void * jarg1) {
  oboe::DefaultStreamValues *arg1 = (oboe::DefaultStreamValues *) 0 ;
  
  arg1 = (oboe::DefaultStreamValues *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_FrameTimestamp_position_set(void * jarg1, long long jarg2) {
  oboe::FrameTimestamp *arg1 = (oboe::FrameTimestamp *) 0 ;
  int64_t arg2 ;
  
  arg1 = (oboe::FrameTimestamp *)jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->position = arg2;
}


SWIGEXPORT long long SWIGSTDCALL CSharp_Oboe_FrameTimestamp_position_get(void * jarg1) {
  long long jresult ;
  oboe::FrameTimestamp *arg1 = (oboe::FrameTimestamp *) 0 ;
  int64_t result;
  
  arg1 = (oboe::FrameTimestamp *)jarg1; 
  result = (int64_t) ((arg1)->position);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_FrameTimestamp_timestamp_set(void * jarg1, long long jarg2) {
  oboe::FrameTimestamp *arg1 = (oboe::FrameTimestamp *) 0 ;
  int64_t arg2 ;
  
  arg1 = (oboe::FrameTimestamp *)jarg1; 
  arg2 = (int64_t)jarg2; 
  if (arg1) (arg1)->timestamp = arg2;
}


SWIGEXPORT long long SWIGSTDCALL CSharp_Oboe_FrameTimestamp_timestamp_get(void * jarg1) {
  long long jresult ;
  oboe::FrameTimestamp *arg1 = (oboe::FrameTimestamp *) 0 ;
  int64_t result;
  
  arg1 = (oboe::FrameTimestamp *)jarg1; 
  result = (int64_t) ((arg1)->timestamp);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_new_FrameTimestamp() {
  void * jresult ;
  oboe::FrameTimestamp *result = 0 ;
  
  result = (oboe::FrameTimestamp *)new oboe::FrameTimestamp();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_delete_FrameTimestamp(void * jarg1) {
  oboe::FrameTimestamp *arg1 = (oboe::FrameTimestamp *) 0 ;
  
  arg1 = (oboe::FrameTimestamp *)jarg1; 
  delete arg1;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Oboe_OboeGlobals_areWorkaroundsEnabled() {
  unsigned int jresult ;
  bool result;
  
  result = (bool)oboe::OboeGlobals::areWorkaroundsEnabled();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_OboeGlobals_setWorkaroundsEnabled(unsigned int jarg1) {
  bool arg1 ;
  
  arg1 = jarg1 ? true : false; 
  oboe::OboeGlobals::setWorkaroundsEnabled(arg1);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_new_OboeGlobals() {
  void * jresult ;
  oboe::OboeGlobals *result = 0 ;
  
  result = (oboe::OboeGlobals *)new oboe::OboeGlobals();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_delete_OboeGlobals(void * jarg1) {
  oboe::OboeGlobals *arg1 = (oboe::OboeGlobals *) 0 ;
  
  arg1 = (oboe::OboeGlobals *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_delete_AudioStreamDataCallback(void * jarg1) {
  oboe::AudioStreamDataCallback *arg1 = (oboe::AudioStreamDataCallback *) 0 ;
  
  arg1 = (oboe::AudioStreamDataCallback *)jarg1; 
  delete arg1;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStreamDataCallback_onAudioReady(void * jarg1, void * jarg2, void * jarg3, int jarg4) {
  int jresult ;
  oboe::AudioStreamDataCallback *arg1 = (oboe::AudioStreamDataCallback *) 0 ;
  oboe::AudioStream *arg2 = (oboe::AudioStream *) 0 ;
  void *arg3 = (void *) 0 ;
  int32_t arg4 ;
  oboe::DataCallbackResult result;
  
  arg1 = (oboe::AudioStreamDataCallback *)jarg1; 
  arg2 = (oboe::AudioStream *)jarg2; 
  arg3 = (void *)jarg3; 
  arg4 = (int32_t)jarg4; 
  result = (oboe::DataCallbackResult)(arg1)->onAudioReady(arg2,arg3,arg4);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_delete_AudioStreamErrorCallback(void * jarg1) {
  oboe::AudioStreamErrorCallback *arg1 = (oboe::AudioStreamErrorCallback *) 0 ;
  
  arg1 = (oboe::AudioStreamErrorCallback *)jarg1; 
  delete arg1;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Oboe_AudioStreamErrorCallback_onError(void * jarg1, void * jarg2, int jarg3) {
  unsigned int jresult ;
  oboe::AudioStreamErrorCallback *arg1 = (oboe::AudioStreamErrorCallback *) 0 ;
  oboe::AudioStream *arg2 = (oboe::AudioStream *) 0 ;
  oboe::Result arg3 ;
  bool result;
  
  arg1 = (oboe::AudioStreamErrorCallback *)jarg1; 
  arg2 = (oboe::AudioStream *)jarg2; 
  arg3 = (oboe::Result)jarg3; 
  result = (bool)(arg1)->onError(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_AudioStreamErrorCallback_onErrorBeforeClose(void * jarg1, void * jarg2, int jarg3) {
  oboe::AudioStreamErrorCallback *arg1 = (oboe::AudioStreamErrorCallback *) 0 ;
  oboe::AudioStream *arg2 = (oboe::AudioStream *) 0 ;
  oboe::Result arg3 ;
  
  arg1 = (oboe::AudioStreamErrorCallback *)jarg1; 
  arg2 = (oboe::AudioStream *)jarg2; 
  arg3 = (oboe::Result)jarg3; 
  (arg1)->onErrorBeforeClose(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_AudioStreamErrorCallback_onErrorAfterClose(void * jarg1, void * jarg2, int jarg3) {
  oboe::AudioStreamErrorCallback *arg1 = (oboe::AudioStreamErrorCallback *) 0 ;
  oboe::AudioStream *arg2 = (oboe::AudioStream *) 0 ;
  oboe::Result arg3 ;
  
  arg1 = (oboe::AudioStreamErrorCallback *)jarg1; 
  arg2 = (oboe::AudioStream *)jarg2; 
  arg3 = (oboe::Result)jarg3; 
  (arg1)->onErrorAfterClose(arg2,arg3);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_new_AudioStreamErrorCallback() {
  void * jresult ;
  oboe::AudioStreamErrorCallback *result = 0 ;
  
  result = (oboe::AudioStreamErrorCallback *)new oboe::AudioStreamErrorCallback();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_delete_AudioStreamCallback(void * jarg1) {
  oboe::AudioStreamCallback *arg1 = (oboe::AudioStreamCallback *) 0 ;
  
  arg1 = (oboe::AudioStreamCallback *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_new_LatencyTuner__SWIG_0(void * jarg1) {
  void * jresult ;
  oboe::AudioStream *arg1 = 0 ;
  oboe::LatencyTuner *result = 0 ;
  
  arg1 = (oboe::AudioStream *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "oboe::AudioStream & type is null", 0);
    return 0;
  } 
  result = (oboe::LatencyTuner *)new oboe::LatencyTuner(*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_new_LatencyTuner__SWIG_1(void * jarg1, int jarg2) {
  void * jresult ;
  oboe::AudioStream *arg1 = 0 ;
  int32_t arg2 ;
  oboe::LatencyTuner *result = 0 ;
  
  arg1 = (oboe::AudioStream *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "oboe::AudioStream & type is null", 0);
    return 0;
  } 
  arg2 = (int32_t)jarg2; 
  result = (oboe::LatencyTuner *)new oboe::LatencyTuner(*arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_LatencyTuner_tune(void * jarg1) {
  int jresult ;
  oboe::LatencyTuner *arg1 = (oboe::LatencyTuner *) 0 ;
  oboe::Result result;
  
  arg1 = (oboe::LatencyTuner *)jarg1; 
  result = (oboe::Result)(arg1)->tune();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_LatencyTuner_requestReset(void * jarg1) {
  oboe::LatencyTuner *arg1 = (oboe::LatencyTuner *) 0 ;
  
  arg1 = (oboe::LatencyTuner *)jarg1; 
  (arg1)->requestReset();
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Oboe_LatencyTuner_isAtMaximumBufferSize(void * jarg1) {
  unsigned int jresult ;
  oboe::LatencyTuner *arg1 = (oboe::LatencyTuner *) 0 ;
  bool result;
  
  arg1 = (oboe::LatencyTuner *)jarg1; 
  result = (bool)(arg1)->isAtMaximumBufferSize();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_LatencyTuner_setMinimumBufferSize(void * jarg1, int jarg2) {
  oboe::LatencyTuner *arg1 = (oboe::LatencyTuner *) 0 ;
  int32_t arg2 ;
  
  arg1 = (oboe::LatencyTuner *)jarg1; 
  arg2 = (int32_t)jarg2; 
  (arg1)->setMinimumBufferSize(arg2);
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_LatencyTuner_getMinimumBufferSize(void * jarg1) {
  int jresult ;
  oboe::LatencyTuner *arg1 = (oboe::LatencyTuner *) 0 ;
  int32_t result;
  
  arg1 = (oboe::LatencyTuner *)jarg1; 
  result = (int32_t)((oboe::LatencyTuner const *)arg1)->getMinimumBufferSize();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_LatencyTuner_setBufferSizeIncrement(void * jarg1, int jarg2) {
  oboe::LatencyTuner *arg1 = (oboe::LatencyTuner *) 0 ;
  int32_t arg2 ;
  
  arg1 = (oboe::LatencyTuner *)jarg1; 
  arg2 = (int32_t)jarg2; 
  (arg1)->setBufferSizeIncrement(arg2);
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_LatencyTuner_getBufferSizeIncrement(void * jarg1) {
  int jresult ;
  oboe::LatencyTuner *arg1 = (oboe::LatencyTuner *) 0 ;
  int32_t result;
  
  arg1 = (oboe::LatencyTuner *)jarg1; 
  result = (int32_t)((oboe::LatencyTuner const *)arg1)->getBufferSizeIncrement();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_delete_LatencyTuner(void * jarg1) {
  oboe::LatencyTuner *arg1 = (oboe::LatencyTuner *) 0 ;
  
  arg1 = (oboe::LatencyTuner *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_new_AudioStreamBase__SWIG_0() {
  void * jresult ;
  oboe::AudioStreamBase *result = 0 ;
  
  result = (oboe::AudioStreamBase *)new oboe::AudioStreamBase();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_delete_AudioStreamBase(void * jarg1) {
  oboe::AudioStreamBase *arg1 = (oboe::AudioStreamBase *) 0 ;
  
  arg1 = (oboe::AudioStreamBase *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_new_AudioStreamBase__SWIG_1(void * jarg1) {
  void * jresult ;
  oboe::AudioStreamBase *arg1 = 0 ;
  oboe::AudioStreamBase *result = 0 ;
  
  arg1 = (oboe::AudioStreamBase *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "oboe::AudioStreamBase const & type is null", 0);
    return 0;
  } 
  result = (oboe::AudioStreamBase *)new oboe::AudioStreamBase((oboe::AudioStreamBase const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStreamBase_getChannelCount(void * jarg1) {
  int jresult ;
  oboe::AudioStreamBase *arg1 = (oboe::AudioStreamBase *) 0 ;
  int32_t result;
  
  arg1 = (oboe::AudioStreamBase *)jarg1; 
  result = (int32_t)((oboe::AudioStreamBase const *)arg1)->getChannelCount();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStreamBase_getDirection(void * jarg1) {
  int jresult ;
  oboe::AudioStreamBase *arg1 = (oboe::AudioStreamBase *) 0 ;
  oboe::Direction result;
  
  arg1 = (oboe::AudioStreamBase *)jarg1; 
  result = (oboe::Direction)((oboe::AudioStreamBase const *)arg1)->getDirection();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStreamBase_getSampleRate(void * jarg1) {
  int jresult ;
  oboe::AudioStreamBase *arg1 = (oboe::AudioStreamBase *) 0 ;
  int32_t result;
  
  arg1 = (oboe::AudioStreamBase *)jarg1; 
  result = (int32_t)((oboe::AudioStreamBase const *)arg1)->getSampleRate();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStreamBase_getFramesPerCallback(void * jarg1) {
  int jresult ;
  oboe::AudioStreamBase *arg1 = (oboe::AudioStreamBase *) 0 ;
  int32_t result;
  
  arg1 = (oboe::AudioStreamBase *)jarg1; 
  result = (int32_t)((oboe::AudioStreamBase const *)arg1)->getFramesPerCallback();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStreamBase_getFramesPerDataCallback(void * jarg1) {
  int jresult ;
  oboe::AudioStreamBase *arg1 = (oboe::AudioStreamBase *) 0 ;
  int32_t result;
  
  arg1 = (oboe::AudioStreamBase *)jarg1; 
  result = (int32_t)((oboe::AudioStreamBase const *)arg1)->getFramesPerDataCallback();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStreamBase_getFormat(void * jarg1) {
  int jresult ;
  oboe::AudioStreamBase *arg1 = (oboe::AudioStreamBase *) 0 ;
  oboe::AudioFormat result;
  
  arg1 = (oboe::AudioStreamBase *)jarg1; 
  result = (oboe::AudioFormat)((oboe::AudioStreamBase const *)arg1)->getFormat();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStreamBase_getBufferSizeInFrames(void * jarg1) {
  int jresult ;
  oboe::AudioStreamBase *arg1 = (oboe::AudioStreamBase *) 0 ;
  int32_t result;
  
  arg1 = (oboe::AudioStreamBase *)jarg1; 
  result = (int32_t)(arg1)->getBufferSizeInFrames();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStreamBase_getBufferCapacityInFrames(void * jarg1) {
  int jresult ;
  oboe::AudioStreamBase *arg1 = (oboe::AudioStreamBase *) 0 ;
  int32_t result;
  
  arg1 = (oboe::AudioStreamBase *)jarg1; 
  result = (int32_t)((oboe::AudioStreamBase const *)arg1)->getBufferCapacityInFrames();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStreamBase_getSharingMode(void * jarg1) {
  int jresult ;
  oboe::AudioStreamBase *arg1 = (oboe::AudioStreamBase *) 0 ;
  oboe::SharingMode result;
  
  arg1 = (oboe::AudioStreamBase *)jarg1; 
  result = (oboe::SharingMode)((oboe::AudioStreamBase const *)arg1)->getSharingMode();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStreamBase_getPerformanceMode(void * jarg1) {
  int jresult ;
  oboe::AudioStreamBase *arg1 = (oboe::AudioStreamBase *) 0 ;
  oboe::PerformanceMode result;
  
  arg1 = (oboe::AudioStreamBase *)jarg1; 
  result = (oboe::PerformanceMode)((oboe::AudioStreamBase const *)arg1)->getPerformanceMode();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStreamBase_getDeviceId(void * jarg1) {
  int jresult ;
  oboe::AudioStreamBase *arg1 = (oboe::AudioStreamBase *) 0 ;
  int32_t result;
  
  arg1 = (oboe::AudioStreamBase *)jarg1; 
  result = (int32_t)((oboe::AudioStreamBase const *)arg1)->getDeviceId();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStreamBase_getDataCallback(void * jarg1) {
  void * jresult ;
  oboe::AudioStreamBase *arg1 = (oboe::AudioStreamBase *) 0 ;
  oboe::AudioStreamDataCallback *result = 0 ;
  
  arg1 = (oboe::AudioStreamBase *)jarg1; 
  result = (oboe::AudioStreamDataCallback *)((oboe::AudioStreamBase const *)arg1)->getDataCallback();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStreamBase_getErrorCallback(void * jarg1) {
  void * jresult ;
  oboe::AudioStreamBase *arg1 = (oboe::AudioStreamBase *) 0 ;
  oboe::AudioStreamErrorCallback *result = 0 ;
  
  arg1 = (oboe::AudioStreamBase *)jarg1; 
  result = (oboe::AudioStreamErrorCallback *)((oboe::AudioStreamBase const *)arg1)->getErrorCallback();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Oboe_AudioStreamBase_isDataCallbackSpecified(void * jarg1) {
  unsigned int jresult ;
  oboe::AudioStreamBase *arg1 = (oboe::AudioStreamBase *) 0 ;
  bool result;
  
  arg1 = (oboe::AudioStreamBase *)jarg1; 
  result = (bool)((oboe::AudioStreamBase const *)arg1)->isDataCallbackSpecified();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Oboe_AudioStreamBase_isErrorCallbackSpecified(void * jarg1) {
  unsigned int jresult ;
  oboe::AudioStreamBase *arg1 = (oboe::AudioStreamBase *) 0 ;
  bool result;
  
  arg1 = (oboe::AudioStreamBase *)jarg1; 
  result = (bool)((oboe::AudioStreamBase const *)arg1)->isErrorCallbackSpecified();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStreamBase_getUsage(void * jarg1) {
  int jresult ;
  oboe::AudioStreamBase *arg1 = (oboe::AudioStreamBase *) 0 ;
  oboe::Usage result;
  
  arg1 = (oboe::AudioStreamBase *)jarg1; 
  result = (oboe::Usage)((oboe::AudioStreamBase const *)arg1)->getUsage();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStreamBase_getContentType(void * jarg1) {
  int jresult ;
  oboe::AudioStreamBase *arg1 = (oboe::AudioStreamBase *) 0 ;
  oboe::ContentType result;
  
  arg1 = (oboe::AudioStreamBase *)jarg1; 
  result = (oboe::ContentType)((oboe::AudioStreamBase const *)arg1)->getContentType();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStreamBase_getInputPreset(void * jarg1) {
  int jresult ;
  oboe::AudioStreamBase *arg1 = (oboe::AudioStreamBase *) 0 ;
  oboe::InputPreset result;
  
  arg1 = (oboe::AudioStreamBase *)jarg1; 
  result = (oboe::InputPreset)((oboe::AudioStreamBase const *)arg1)->getInputPreset();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStreamBase_getSessionId(void * jarg1) {
  int jresult ;
  oboe::AudioStreamBase *arg1 = (oboe::AudioStreamBase *) 0 ;
  oboe::SessionId result;
  
  arg1 = (oboe::AudioStreamBase *)jarg1; 
  result = (oboe::SessionId)((oboe::AudioStreamBase const *)arg1)->getSessionId();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Oboe_AudioStreamBase_isChannelConversionAllowed(void * jarg1) {
  unsigned int jresult ;
  oboe::AudioStreamBase *arg1 = (oboe::AudioStreamBase *) 0 ;
  bool result;
  
  arg1 = (oboe::AudioStreamBase *)jarg1; 
  result = (bool)((oboe::AudioStreamBase const *)arg1)->isChannelConversionAllowed();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Oboe_AudioStreamBase_isFormatConversionAllowed(void * jarg1) {
  unsigned int jresult ;
  oboe::AudioStreamBase *arg1 = (oboe::AudioStreamBase *) 0 ;
  bool result;
  
  arg1 = (oboe::AudioStreamBase *)jarg1; 
  result = (bool)((oboe::AudioStreamBase const *)arg1)->isFormatConversionAllowed();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStreamBase_getSampleRateConversionQuality(void * jarg1) {
  int jresult ;
  oboe::AudioStreamBase *arg1 = (oboe::AudioStreamBase *) 0 ;
  oboe::SampleRateConversionQuality result;
  
  arg1 = (oboe::AudioStreamBase *)jarg1; 
  result = (oboe::SampleRateConversionQuality)((oboe::AudioStreamBase const *)arg1)->getSampleRateConversionQuality();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT long long SWIGSTDCALL CSharp_Oboe_kDefaultTimeoutNanos_get() {
  long long jresult ;
  int64_t result;
  
  result = (int64_t)oboe::kDefaultTimeoutNanos;
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_delete_AudioStream(void * jarg1) {
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  delete arg1;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStream_open(void * jarg1) {
  int jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  oboe::Result result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  result = (oboe::Result)(arg1)->open();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStream_close(void * jarg1) {
  int jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  oboe::Result result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  result = (oboe::Result)(arg1)->close();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStream_start__SWIG_0(void * jarg1, long long jarg2) {
  int jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  int64_t arg2 ;
  oboe::Result result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  arg2 = (int64_t)jarg2; 
  result = (oboe::Result)(arg1)->start(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStream_start__SWIG_1(void * jarg1) {
  int jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  oboe::Result result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  result = (oboe::Result)(arg1)->start();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStream_pause__SWIG_0(void * jarg1, long long jarg2) {
  int jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  int64_t arg2 ;
  oboe::Result result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  arg2 = (int64_t)jarg2; 
  result = (oboe::Result)(arg1)->pause(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStream_pause__SWIG_1(void * jarg1) {
  int jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  oboe::Result result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  result = (oboe::Result)(arg1)->pause();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStream_flush__SWIG_0(void * jarg1, long long jarg2) {
  int jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  int64_t arg2 ;
  oboe::Result result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  arg2 = (int64_t)jarg2; 
  result = (oboe::Result)(arg1)->flush(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStream_flush__SWIG_1(void * jarg1) {
  int jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  oboe::Result result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  result = (oboe::Result)(arg1)->flush();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStream_stop__SWIG_0(void * jarg1, long long jarg2) {
  int jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  int64_t arg2 ;
  oboe::Result result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  arg2 = (int64_t)jarg2; 
  result = (oboe::Result)(arg1)->stop(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStream_stop__SWIG_1(void * jarg1) {
  int jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  oboe::Result result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  result = (oboe::Result)(arg1)->stop();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStream_requestStart(void * jarg1) {
  int jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  oboe::Result result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  result = (oboe::Result)(arg1)->requestStart();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStream_requestPause(void * jarg1) {
  int jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  oboe::Result result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  result = (oboe::Result)(arg1)->requestPause();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStream_requestFlush(void * jarg1) {
  int jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  oboe::Result result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  result = (oboe::Result)(arg1)->requestFlush();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStream_requestStop(void * jarg1) {
  int jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  oboe::Result result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  result = (oboe::Result)(arg1)->requestStop();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStream_getState(void * jarg1) {
  int jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  oboe::StreamState result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  result = (oboe::StreamState)(arg1)->getState();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStream_waitForStateChange(void * jarg1, int jarg2, void * jarg3, long long jarg4) {
  int jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  oboe::StreamState arg2 ;
  oboe::StreamState *arg3 = (oboe::StreamState *) 0 ;
  int64_t arg4 ;
  oboe::Result result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  arg2 = (oboe::StreamState)jarg2; 
  arg3 = (oboe::StreamState *)jarg3; 
  arg4 = (int64_t)jarg4; 
  result = (oboe::Result)(arg1)->waitForStateChange(arg2,arg3,arg4);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStream_setBufferSizeInFrames(void * jarg1, int jarg2) {
  void * jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  int32_t arg2 ;
  SwigValueWrapper< oboe::ResultWithValue< int > > result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  arg2 = (int32_t)jarg2; 
  result = (arg1)->setBufferSizeInFrames(arg2);
  jresult = new oboe::ResultWithValue< int32_t >((const oboe::ResultWithValue< int32_t > &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStream_getXRunCount(void * jarg1) {
  void * jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  SwigValueWrapper< oboe::ResultWithValue< int > > result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  result = (arg1)->getXRunCount();
  jresult = new oboe::ResultWithValue< int32_t >((const oboe::ResultWithValue< int32_t > &)result); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Oboe_AudioStream_isXRunCountSupported(void * jarg1) {
  unsigned int jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  bool result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  result = (bool)((oboe::AudioStream const *)arg1)->isXRunCountSupported();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStream_getFramesPerBurst(void * jarg1) {
  int jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  int32_t result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  result = (int32_t)((oboe::AudioStream const *)arg1)->getFramesPerBurst();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStream_getBytesPerFrame(void * jarg1) {
  int jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  int32_t result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  result = (int32_t)((oboe::AudioStream const *)arg1)->getBytesPerFrame();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStream_getBytesPerSample(void * jarg1) {
  int jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  int32_t result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  result = (int32_t)((oboe::AudioStream const *)arg1)->getBytesPerSample();
  jresult = result; 
  return jresult;
}


SWIGEXPORT long long SWIGSTDCALL CSharp_Oboe_AudioStream_getFramesWritten(void * jarg1) {
  long long jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  int64_t result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  result = (int64_t)(arg1)->getFramesWritten();
  jresult = result; 
  return jresult;
}


SWIGEXPORT long long SWIGSTDCALL CSharp_Oboe_AudioStream_getFramesRead(void * jarg1) {
  long long jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  int64_t result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  result = (int64_t)(arg1)->getFramesRead();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStream_calculateLatencyMillis(void * jarg1) {
  void * jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  SwigValueWrapper< oboe::ResultWithValue< double > > result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  result = (arg1)->calculateLatencyMillis();
  jresult = new oboe::ResultWithValue< double >((const oboe::ResultWithValue< double > &)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStream_getTimestamp__SWIG_0(void * jarg1, void * jarg2, void * jarg3, void * jarg4) {
  int jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  clockid_t arg2 ;
  int64_t *arg3 = (int64_t *) 0 ;
  int64_t *arg4 = (int64_t *) 0 ;
  clockid_t *argp2 ;
  oboe::Result result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  argp2 = (clockid_t *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null clockid_t", 0);
    return 0;
  }
  arg2 = *argp2; 
  arg3 = (int64_t *)jarg3; 
  arg4 = (int64_t *)jarg4; 
  result = (oboe::Result)(arg1)->getTimestamp(arg2,arg3,arg4);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStream_getTimestamp__SWIG_1(void * jarg1, void * jarg2) {
  void * jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  clockid_t arg2 ;
  clockid_t *argp2 ;
  SwigValueWrapper< oboe::ResultWithValue< oboe::FrameTimestamp > > result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  argp2 = (clockid_t *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null clockid_t", 0);
    return 0;
  }
  arg2 = *argp2; 
  result = (arg1)->getTimestamp(arg2);
  jresult = new oboe::ResultWithValue< oboe::FrameTimestamp >((const oboe::ResultWithValue< oboe::FrameTimestamp > &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStream_write(void * jarg1, void * jarg2, int jarg3, long long jarg4) {
  void * jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  void *arg2 = (void *) 0 ;
  int32_t arg3 ;
  int64_t arg4 ;
  SwigValueWrapper< oboe::ResultWithValue< int > > result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  arg2 = (void *)jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = (int64_t)jarg4; 
  result = (arg1)->write((void const *)arg2,arg3,arg4);
  jresult = new oboe::ResultWithValue< int32_t >((const oboe::ResultWithValue< int32_t > &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStream_read(void * jarg1, void * jarg2, int jarg3, long long jarg4) {
  void * jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  void *arg2 = (void *) 0 ;
  int32_t arg3 ;
  int64_t arg4 ;
  SwigValueWrapper< oboe::ResultWithValue< int > > result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  arg2 = (void *)jarg2; 
  arg3 = (int32_t)jarg3; 
  arg4 = (int64_t)jarg4; 
  result = (arg1)->read(arg2,arg3,arg4);
  jresult = new oboe::ResultWithValue< int32_t >((const oboe::ResultWithValue< int32_t > &)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStream_getAudioApi(void * jarg1) {
  int jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  oboe::AudioApi result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  result = (oboe::AudioApi)((oboe::AudioStream const *)arg1)->getAudioApi();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Oboe_AudioStream_usesAAudio(void * jarg1) {
  unsigned int jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  bool result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  result = (bool)((oboe::AudioStream const *)arg1)->usesAAudio();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStream_getUnderlyingStream(void * jarg1) {
  void * jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  void *result = 0 ;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  result = (void *)((oboe::AudioStream const *)arg1)->getUnderlyingStream();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_AudioStream_updateFramesWritten(void * jarg1) {
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  (arg1)->updateFramesWritten();
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_AudioStream_updateFramesRead(void * jarg1) {
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  (arg1)->updateFramesRead();
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStream_swapDataCallback(void * jarg1, void * jarg2) {
  void * jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  oboe::AudioStreamDataCallback *arg2 = (oboe::AudioStreamDataCallback *) 0 ;
  oboe::AudioStreamDataCallback *result = 0 ;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  arg2 = (oboe::AudioStreamDataCallback *)jarg2; 
  result = (oboe::AudioStreamDataCallback *)(arg1)->swapDataCallback(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStream_swapErrorCallback(void * jarg1, void * jarg2) {
  void * jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  oboe::AudioStreamErrorCallback *arg2 = (oboe::AudioStreamErrorCallback *) 0 ;
  oboe::AudioStreamErrorCallback *result = 0 ;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  arg2 = (oboe::AudioStreamErrorCallback *)jarg2; 
  result = (oboe::AudioStreamErrorCallback *)(arg1)->swapErrorCallback(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStream_getAvailableFrames(void * jarg1) {
  void * jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  SwigValueWrapper< oboe::ResultWithValue< int > > result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  result = (arg1)->getAvailableFrames();
  jresult = new oboe::ResultWithValue< int32_t >((const oboe::ResultWithValue< int32_t > &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStream_waitForAvailableFrames(void * jarg1, int jarg2, long long jarg3) {
  void * jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  int32_t arg2 ;
  int64_t arg3 ;
  SwigValueWrapper< oboe::ResultWithValue< int > > result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  arg2 = (int32_t)jarg2; 
  arg3 = (int64_t)jarg3; 
  result = (arg1)->waitForAvailableFrames(arg2,arg3);
  jresult = new oboe::ResultWithValue< int32_t >((const oboe::ResultWithValue< int32_t > &)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStream_getLastErrorCallbackResult(void * jarg1) {
  int jresult ;
  oboe::AudioStream *arg1 = (oboe::AudioStream *) 0 ;
  oboe::Result result;
  
  arg1 = (oboe::AudioStream *)jarg1; 
  result = (oboe::Result)((oboe::AudioStream const *)arg1)->getLastErrorCallbackResult();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_new_StreamDeleterFunctor() {
  void * jresult ;
  oboe::StreamDeleterFunctor *result = 0 ;
  
  result = (oboe::StreamDeleterFunctor *)new oboe::StreamDeleterFunctor();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_delete_StreamDeleterFunctor(void * jarg1) {
  oboe::StreamDeleterFunctor *arg1 = (oboe::StreamDeleterFunctor *) 0 ;
  
  arg1 = (oboe::StreamDeleterFunctor *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_new_AudioStreamBuilder__SWIG_0() {
  void * jresult ;
  oboe::AudioStreamBuilder *result = 0 ;
  
  result = (oboe::AudioStreamBuilder *)new oboe::AudioStreamBuilder();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_new_AudioStreamBuilder__SWIG_1(void * jarg1) {
  void * jresult ;
  oboe::AudioStreamBase *arg1 = 0 ;
  oboe::AudioStreamBuilder *result = 0 ;
  
  arg1 = (oboe::AudioStreamBase *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "oboe::AudioStreamBase const & type is null", 0);
    return 0;
  } 
  result = (oboe::AudioStreamBuilder *)new oboe::AudioStreamBuilder((oboe::AudioStreamBase const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_setChannelCount(void * jarg1, int jarg2) {
  void * jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  int arg2 ;
  oboe::AudioStreamBuilder *result = 0 ;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  arg2 = (int)jarg2; 
  result = (oboe::AudioStreamBuilder *)(arg1)->setChannelCount(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_setDirection(void * jarg1, int jarg2) {
  void * jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  oboe::Direction arg2 ;
  oboe::AudioStreamBuilder *result = 0 ;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  arg2 = (oboe::Direction)jarg2; 
  result = (oboe::AudioStreamBuilder *)(arg1)->setDirection(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_setSampleRate(void * jarg1, int jarg2) {
  void * jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  int32_t arg2 ;
  oboe::AudioStreamBuilder *result = 0 ;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  arg2 = (int32_t)jarg2; 
  result = (oboe::AudioStreamBuilder *)(arg1)->setSampleRate(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_setFramesPerCallback(void * jarg1, int jarg2) {
  void * jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  int arg2 ;
  oboe::AudioStreamBuilder *result = 0 ;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  arg2 = (int)jarg2; 
  result = (oboe::AudioStreamBuilder *)(arg1)->setFramesPerCallback(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_setFramesPerDataCallback(void * jarg1, int jarg2) {
  void * jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  int arg2 ;
  oboe::AudioStreamBuilder *result = 0 ;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  arg2 = (int)jarg2; 
  result = (oboe::AudioStreamBuilder *)(arg1)->setFramesPerDataCallback(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_setFormat(void * jarg1, int jarg2) {
  void * jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  oboe::AudioFormat arg2 ;
  oboe::AudioStreamBuilder *result = 0 ;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  arg2 = (oboe::AudioFormat)jarg2; 
  result = (oboe::AudioStreamBuilder *)(arg1)->setFormat(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_setBufferCapacityInFrames(void * jarg1, int jarg2) {
  void * jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  int32_t arg2 ;
  oboe::AudioStreamBuilder *result = 0 ;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  arg2 = (int32_t)jarg2; 
  result = (oboe::AudioStreamBuilder *)(arg1)->setBufferCapacityInFrames(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_getAudioApi(void * jarg1) {
  int jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  oboe::AudioApi result;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  result = (oboe::AudioApi)((oboe::AudioStreamBuilder const *)arg1)->getAudioApi();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_setAudioApi(void * jarg1, int jarg2) {
  void * jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  oboe::AudioApi arg2 ;
  oboe::AudioStreamBuilder *result = 0 ;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  arg2 = (oboe::AudioApi)jarg2; 
  result = (oboe::AudioStreamBuilder *)(arg1)->setAudioApi(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_isAAudioSupported() {
  unsigned int jresult ;
  bool result;
  
  result = (bool)oboe::AudioStreamBuilder::isAAudioSupported();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_isAAudioRecommended() {
  unsigned int jresult ;
  bool result;
  
  result = (bool)oboe::AudioStreamBuilder::isAAudioRecommended();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_setSharingMode(void * jarg1, int jarg2) {
  void * jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  oboe::SharingMode arg2 ;
  oboe::AudioStreamBuilder *result = 0 ;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  arg2 = (oboe::SharingMode)jarg2; 
  result = (oboe::AudioStreamBuilder *)(arg1)->setSharingMode(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_setPerformanceMode(void * jarg1, int jarg2) {
  void * jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  oboe::PerformanceMode arg2 ;
  oboe::AudioStreamBuilder *result = 0 ;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  arg2 = (oboe::PerformanceMode)jarg2; 
  result = (oboe::AudioStreamBuilder *)(arg1)->setPerformanceMode(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_setUsage(void * jarg1, int jarg2) {
  void * jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  oboe::Usage arg2 ;
  oboe::AudioStreamBuilder *result = 0 ;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  arg2 = (oboe::Usage)jarg2; 
  result = (oboe::AudioStreamBuilder *)(arg1)->setUsage(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_setContentType(void * jarg1, int jarg2) {
  void * jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  oboe::ContentType arg2 ;
  oboe::AudioStreamBuilder *result = 0 ;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  arg2 = (oboe::ContentType)jarg2; 
  result = (oboe::AudioStreamBuilder *)(arg1)->setContentType(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_setInputPreset(void * jarg1, int jarg2) {
  void * jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  oboe::InputPreset arg2 ;
  oboe::AudioStreamBuilder *result = 0 ;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  arg2 = (oboe::InputPreset)jarg2; 
  result = (oboe::AudioStreamBuilder *)(arg1)->setInputPreset(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_setSessionId(void * jarg1, int jarg2) {
  void * jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  oboe::SessionId arg2 ;
  oboe::AudioStreamBuilder *result = 0 ;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  arg2 = (oboe::SessionId)jarg2; 
  result = (oboe::AudioStreamBuilder *)(arg1)->setSessionId(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_setDeviceId(void * jarg1, int jarg2) {
  void * jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  int32_t arg2 ;
  oboe::AudioStreamBuilder *result = 0 ;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  arg2 = (int32_t)jarg2; 
  result = (oboe::AudioStreamBuilder *)(arg1)->setDeviceId(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_setDataCallback(void * jarg1, void * jarg2) {
  void * jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  oboe::AudioStreamDataCallback *arg2 = (oboe::AudioStreamDataCallback *) 0 ;
  oboe::AudioStreamBuilder *result = 0 ;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  arg2 = (oboe::AudioStreamDataCallback *)jarg2; 
  result = (oboe::AudioStreamBuilder *)(arg1)->setDataCallback(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_setErrorCallback(void * jarg1, void * jarg2) {
  void * jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  oboe::AudioStreamErrorCallback *arg2 = (oboe::AudioStreamErrorCallback *) 0 ;
  oboe::AudioStreamBuilder *result = 0 ;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  arg2 = (oboe::AudioStreamErrorCallback *)jarg2; 
  result = (oboe::AudioStreamBuilder *)(arg1)->setErrorCallback(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_setCallback(void * jarg1, void * jarg2) {
  void * jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  oboe::AudioStreamCallback *arg2 = (oboe::AudioStreamCallback *) 0 ;
  oboe::AudioStreamBuilder *result = 0 ;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  arg2 = (oboe::AudioStreamCallback *)jarg2; 
  result = (oboe::AudioStreamBuilder *)(arg1)->setCallback(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_setChannelConversionAllowed(void * jarg1, unsigned int jarg2) {
  void * jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  bool arg2 ;
  oboe::AudioStreamBuilder *result = 0 ;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (oboe::AudioStreamBuilder *)(arg1)->setChannelConversionAllowed(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_setFormatConversionAllowed(void * jarg1, unsigned int jarg2) {
  void * jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  bool arg2 ;
  oboe::AudioStreamBuilder *result = 0 ;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (oboe::AudioStreamBuilder *)(arg1)->setFormatConversionAllowed(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_setSampleRateConversionQuality(void * jarg1, int jarg2) {
  void * jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  oboe::SampleRateConversionQuality arg2 ;
  oboe::AudioStreamBuilder *result = 0 ;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  arg2 = (oboe::SampleRateConversionQuality)jarg2; 
  result = (oboe::AudioStreamBuilder *)(arg1)->setSampleRateConversionQuality(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_setPackageName(void * jarg1, char * jarg2) {
  void * jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  std::string arg2 ;
  oboe::AudioStreamBuilder *result = 0 ;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  (&arg2)->assign(jarg2); 
  result = (oboe::AudioStreamBuilder *)(arg1)->setPackageName(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_setAttributionTag(void * jarg1, char * jarg2) {
  void * jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  std::string arg2 ;
  oboe::AudioStreamBuilder *result = 0 ;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  (&arg2)->assign(jarg2); 
  result = (oboe::AudioStreamBuilder *)(arg1)->setAttributionTag(arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_willUseAAudio(void * jarg1) {
  unsigned int jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  bool result;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  result = (bool)((oboe::AudioStreamBuilder const *)arg1)->willUseAAudio();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_openStream__SWIG_0(void * jarg1, void * jarg2) {
  int jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  oboe::AudioStream **arg2 = (oboe::AudioStream **) 0 ;
  oboe::Result result;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  arg2 = (oboe::AudioStream **)jarg2; 
  result = (oboe::Result)(arg1)->openStream(arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_openStream__SWIG_1(void * jarg1, void * jarg2) {
  int jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  std::shared_ptr< oboe::AudioStream > *arg2 = 0 ;
  oboe::Result result;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  arg2 = (std::shared_ptr< oboe::AudioStream > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::shared_ptr< oboe::AudioStream > & type is null", 0);
    return 0;
  } 
  result = (oboe::Result)(arg1)->openStream(*arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_openManagedStream(void * jarg1, void * jarg2) {
  int jresult ;
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  oboe::ManagedStream *arg2 = 0 ;
  oboe::Result result;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  arg2 = (oboe::ManagedStream *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "oboe::ManagedStream & type is null", 0);
    return 0;
  } 
  result = (oboe::Result)(arg1)->openManagedStream(*arg2);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_delete_AudioStreamBuilder(void * jarg1) {
  oboe::AudioStreamBuilder *arg1 = (oboe::AudioStreamBuilder *) 0 ;
  
  arg1 = (oboe::AudioStreamBuilder *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_convertFloatToPcm16(void * jarg1, void * jarg2, int jarg3) {
  float *arg1 = (float *) 0 ;
  int16_t *arg2 = (int16_t *) 0 ;
  int32_t arg3 ;
  
  arg1 = (float *)jarg1; 
  arg2 = (int16_t *)jarg2; 
  arg3 = (int32_t)jarg3; 
  oboe::convertFloatToPcm16((float const *)arg1,arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_convertPcm16ToFloat(void * jarg1, void * jarg2, int jarg3) {
  int16_t *arg1 = (int16_t *) 0 ;
  float *arg2 = (float *) 0 ;
  int32_t arg3 ;
  
  arg1 = (int16_t *)jarg1; 
  arg2 = (float *)jarg2; 
  arg3 = (int32_t)jarg3; 
  oboe::convertPcm16ToFloat((short const *)arg1,arg2,arg3);
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_convertFormatToSizeInBytes(int jarg1) {
  int jresult ;
  oboe::AudioFormat arg1 ;
  int32_t result;
  
  arg1 = (oboe::AudioFormat)jarg1; 
  result = (int32_t)oboe::convertFormatToSizeInBytes(arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_Oboe_getPropertyString(char * jarg1) {
  char * jresult ;
  char *arg1 = (char *) 0 ;
  std::string result;
  
  arg1 = (char *)jarg1; 
  result = oboe::getPropertyString((char const *)arg1);
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_getPropertyInteger(char * jarg1, int jarg2) {
  int jresult ;
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int result;
  
  arg1 = (char *)jarg1; 
  arg2 = (int)jarg2; 
  result = (int)oboe::getPropertyInteger((char const *)arg1,arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_getSdkVersion() {
  int jresult ;
  int result;
  
  result = (int)oboe::getSdkVersion();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_OBOE_VERSION_MAJOR_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_OBOE_VERSION_MINOR_get() {
  int jresult ;
  int result;
  
  result = (int)(6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_OBOE_VERSION_PATCH_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_Oboe_OBOE_VERSION_TEXT_get() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("1.6.1");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_OBOE_VERSION_NUMBER_get() {
  int jresult ;
  int result;
  
  result = (int)(((1 << 24)|(6 << 16)|1));
  jresult = result; 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_Oboe_getVersionText() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)oboe::getVersionText();
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_Oboe_Version_Major_get() {
  unsigned char jresult ;
  unsigned char result;
  
  result = (unsigned char)oboe::Version::Major;
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_Oboe_Version_Minor_get() {
  unsigned char jresult ;
  unsigned char result;
  
  result = (unsigned char)oboe::Version::Minor;
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned short SWIGSTDCALL CSharp_Oboe_Version_Patch_get() {
  unsigned short jresult ;
  unsigned short result;
  
  result = (unsigned short)oboe::Version::Patch;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_Oboe_Version_Text_get() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)oboe::Version::Text;
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Oboe_Version_Number_get() {
  unsigned int jresult ;
  unsigned int result;
  
  result = (unsigned int)oboe::Version::Number;
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_new_Version() {
  void * jresult ;
  oboe::Version *result = 0 ;
  
  result = (oboe::Version *)new oboe::Version();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_delete_Version(void * jarg1) {
  oboe::Version *arg1 = (oboe::Version *) 0 ;
  
  arg1 = (oboe::Version *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_new_StabilizedCallback(void * jarg1) {
  void * jresult ;
  oboe::AudioStreamCallback *arg1 = (oboe::AudioStreamCallback *) 0 ;
  oboe::StabilizedCallback *result = 0 ;
  
  arg1 = (oboe::AudioStreamCallback *)jarg1; 
  result = (oboe::StabilizedCallback *)new oboe::StabilizedCallback(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_StabilizedCallback_onAudioReady(void * jarg1, void * jarg2, void * jarg3, int jarg4) {
  int jresult ;
  oboe::StabilizedCallback *arg1 = (oboe::StabilizedCallback *) 0 ;
  oboe::AudioStream *arg2 = (oboe::AudioStream *) 0 ;
  void *arg3 = (void *) 0 ;
  int32_t arg4 ;
  oboe::DataCallbackResult result;
  
  arg1 = (oboe::StabilizedCallback *)jarg1; 
  arg2 = (oboe::AudioStream *)jarg2; 
  arg3 = (void *)jarg3; 
  arg4 = (int32_t)jarg4; 
  result = (oboe::DataCallbackResult)(arg1)->onAudioReady(arg2,arg3,arg4);
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_StabilizedCallback_onErrorBeforeClose(void * jarg1, void * jarg2, int jarg3) {
  oboe::StabilizedCallback *arg1 = (oboe::StabilizedCallback *) 0 ;
  oboe::AudioStream *arg2 = (oboe::AudioStream *) 0 ;
  oboe::Result arg3 ;
  
  arg1 = (oboe::StabilizedCallback *)jarg1; 
  arg2 = (oboe::AudioStream *)jarg2; 
  arg3 = (oboe::Result)jarg3; 
  (arg1)->onErrorBeforeClose(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_StabilizedCallback_onErrorAfterClose(void * jarg1, void * jarg2, int jarg3) {
  oboe::StabilizedCallback *arg1 = (oboe::StabilizedCallback *) 0 ;
  oboe::AudioStream *arg2 = (oboe::AudioStream *) 0 ;
  oboe::Result arg3 ;
  
  arg1 = (oboe::StabilizedCallback *)jarg1; 
  arg2 = (oboe::AudioStream *)jarg2; 
  arg3 = (oboe::Result)jarg3; 
  (arg1)->onErrorAfterClose(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_delete_StabilizedCallback(void * jarg1) {
  oboe::StabilizedCallback *arg1 = (oboe::StabilizedCallback *) 0 ;
  
  arg1 = (oboe::StabilizedCallback *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_new_ResultWithDouble__SWIG_0(int jarg1) {
  void * jresult ;
  oboe::Result arg1 ;
  oboe::ResultWithValue< double > *result = 0 ;
  
  arg1 = (oboe::Result)jarg1; 
  result = (oboe::ResultWithValue< double > *)new oboe::ResultWithValue< double >(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_new_ResultWithDouble__SWIG_1(double jarg1) {
  void * jresult ;
  double arg1 ;
  oboe::ResultWithValue< double > *result = 0 ;
  
  arg1 = (double)jarg1; 
  result = (oboe::ResultWithValue< double > *)new oboe::ResultWithValue< double >(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_ResultWithDouble_error(void * jarg1) {
  int jresult ;
  oboe::ResultWithValue< double > *arg1 = (oboe::ResultWithValue< double > *) 0 ;
  oboe::Result result;
  
  arg1 = (oboe::ResultWithValue< double > *)jarg1; 
  result = (oboe::Result)((oboe::ResultWithValue< double > const *)arg1)->error();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Oboe_ResultWithDouble_value(void * jarg1) {
  double jresult ;
  oboe::ResultWithValue< double > *arg1 = (oboe::ResultWithValue< double > *) 0 ;
  double result;
  
  arg1 = (oboe::ResultWithValue< double > *)jarg1; 
  result = (double)((oboe::ResultWithValue< double > const *)arg1)->value();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_ResultWithDouble_createBasedOnSign(double jarg1) {
  void * jresult ;
  double arg1 ;
  SwigValueWrapper< oboe::ResultWithValue< double > > result;
  
  arg1 = (double)jarg1; 
  result = oboe::ResultWithValue< double >::SWIGTEMPLATEDISAMBIGUATOR createBasedOnSign(arg1);
  jresult = new oboe::ResultWithValue< double >((const oboe::ResultWithValue< double > &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_delete_ResultWithDouble(void * jarg1) {
  oboe::ResultWithValue< double > *arg1 = (oboe::ResultWithValue< double > *) 0 ;
  
  arg1 = (oboe::ResultWithValue< double > *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_new_ResultWithInt__SWIG_0(int jarg1) {
  void * jresult ;
  oboe::Result arg1 ;
  oboe::ResultWithValue< int32_t > *result = 0 ;
  
  arg1 = (oboe::Result)jarg1; 
  result = (oboe::ResultWithValue< int32_t > *)new oboe::ResultWithValue< int32_t >(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_new_ResultWithInt__SWIG_1(int jarg1) {
  void * jresult ;
  int arg1 ;
  oboe::ResultWithValue< int32_t > *result = 0 ;
  
  arg1 = (int)jarg1; 
  result = (oboe::ResultWithValue< int32_t > *)new oboe::ResultWithValue< int32_t >(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_ResultWithInt_error(void * jarg1) {
  int jresult ;
  oboe::ResultWithValue< int32_t > *arg1 = (oboe::ResultWithValue< int32_t > *) 0 ;
  oboe::Result result;
  
  arg1 = (oboe::ResultWithValue< int32_t > *)jarg1; 
  result = (oboe::Result)((oboe::ResultWithValue< int32_t > const *)arg1)->error();
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Oboe_ResultWithInt_value(void * jarg1) {
  int jresult ;
  oboe::ResultWithValue< int32_t > *arg1 = (oboe::ResultWithValue< int32_t > *) 0 ;
  int result;
  
  arg1 = (oboe::ResultWithValue< int32_t > *)jarg1; 
  result = (int)((oboe::ResultWithValue< int32_t > const *)arg1)->value();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Oboe_ResultWithInt_createBasedOnSign(int jarg1) {
  void * jresult ;
  int arg1 ;
  SwigValueWrapper< oboe::ResultWithValue< int > > result;
  
  arg1 = (int)jarg1; 
  result = oboe::ResultWithValue< int32_t >::SWIGTEMPLATEDISAMBIGUATOR createBasedOnSign(arg1);
  jresult = new oboe::ResultWithValue< int >((const oboe::ResultWithValue< int > &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Oboe_delete_ResultWithInt(void * jarg1) {
  oboe::ResultWithValue< int32_t > *arg1 = (oboe::ResultWithValue< int32_t > *) 0 ;
  
  arg1 = (oboe::ResultWithValue< int32_t > *)jarg1; 
  delete arg1;
}


SWIGEXPORT oboe::AudioStreamDataCallback * SWIGSTDCALL CSharp_Oboe_AudioStreamCallback_SWIGUpcast(oboe::AudioStreamCallback *jarg1) {
    return (oboe::AudioStreamDataCallback *)jarg1;
}

SWIGEXPORT oboe::AudioStreamBase * SWIGSTDCALL CSharp_Oboe_AudioStream_SWIGUpcast(oboe::AudioStream *jarg1) {
    return (oboe::AudioStreamBase *)jarg1;
}

SWIGEXPORT oboe::AudioStreamBase * SWIGSTDCALL CSharp_Oboe_AudioStreamBuilder_SWIGUpcast(oboe::AudioStreamBuilder *jarg1) {
    return (oboe::AudioStreamBase *)jarg1;
}

SWIGEXPORT oboe::AudioStreamCallback * SWIGSTDCALL CSharp_Oboe_StabilizedCallback_SWIGUpcast(oboe::StabilizedCallback *jarg1) {
    return (oboe::AudioStreamCallback *)jarg1;
}

#ifdef __cplusplus
}
#endif

